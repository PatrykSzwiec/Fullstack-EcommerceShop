generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// PRODUCT SCHEMAS 
enum Color {
  Black
  Red
  Blue
  Green
  White
}

model Product {
  id               Int           @id
  name             String
  price            Int
  description      String
  shortDescription String
  color            String
  sizes            ProductSize[]
  images           ProductImage[]
  cartItems        CartItem[]
  orderItems       ProductOrder[]
}

model ProductSize {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  size      String
  quantity  Int
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
}

// USER SCHEMAS
enum Role {
  USER
  ADMIN
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  role     Role     @default(USER)
  password Password?
  cart     Cart?
}

model Password {
  id             String    @id @default(uuid())
  hashedPassword String
  user           User      @relation(fields: [id], references: [id], onDelete: Cascade)
}

// CART SCHEMAS
model Cart {
  id       String    @id @default(uuid())
  userId   String    @unique
  user     User      @relation(fields: [userId], references: [id])
  cartItems CartItem[]
}

model CartItem {
  id         Int       @id @default(autoincrement())
  cart       Cart      @relation(fields: [cartId], references: [id])
  cartId     String
  product    Product   @relation(fields: [productId], references: [id])
  productId  Int
  size       String
  quantity   Int
  comments   String?
}

// ORDER SCHEMAS
model Order {
  id           Int        @id @default(autoincrement())
  userId       String
  products     ProductOrder[]
  totalPrice   Int
  name         String
  surname      String
  postCode     String
  city         String
  address      String
  country      String
}

model ProductOrder {
  id           Int        @id @default(autoincrement())
  order        Order      @relation(fields: [orderId], references: [id])
  orderId      Int
  product      Product    @relation(fields: [productId], references: [id])
  productId    Int
  size         String
  quantity     Int
}